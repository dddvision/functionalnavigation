general:
 * Document that all measures are two-point functions.
 * Document that trajectory evaluations are in the "pose and tangent pose" space.
 * Making class aliases for "Time", "NodeIndex", and other simple classes.

research:
 * Topics for publication:
   * Measurement graphs are an alternative to pose graphs.
 * Review standards (briefly):
   * STANAG 4586
   * JAUS V3.3 (JAUGS?)
   * SMART (Sandia Modular Architecture for Robotics and Teleoperation)
 * Olsen: Pose graphs
 * H. W. Sorenson. "Parameter Estimation". 1980.
 * Xi-Ren Cao. "Stochastic Learning and Optimization: A sensitivity-based Approach". Springer 2007.
 * Review other code in /projects/1490/software
 * Cramer-Rao: cov(your estimator)>=inv(information)
 * Anil Rao & Dave Benson: Gauss Pseudospectral Method (GPM)
 * Natalia Hernandez Gardiol @ CSAIL:
 * Adam Klivans: learning decision trees over binary inputs
 * Kalai: learning halfspaces
 * Titterton, D. H. and Weston, J. L. Strapdown Inertial Navigation Technology. IEE, page 254, 2004.

testbed:
 *** Document distinction between testbed and Optimizer.
 * Create unit tests for all framework classes to check interfaces and exception handling.
 * Create advanced unit tests to characterize measures
   * Cost when given ground truth
   * Granularity / dilution of precision
   * Monotonicity
   * Bias / distance to nearest local minimum
   * Sensitivity to perturbation of initial tangent pose

demonstration:
 *** Create inertial/visual DataContainer for MacBook demo.
 *** Write code for low level access to iSight camera.
 * Demonstrate GPS/IMU fused in loose, tight, and ultra-tight modes.
 * Perform trade studies: GPS quality, IMU quality, camera FOV, camera FPS, image resolution, limited computation

Optimizer:
 * Find the right place to set kaMaxLag and kbMaxLag.
 * getResults should return the objective instance (without costs?).
 * Create linkage-based GA crossover function.

DynamicModel:
 *** Store initial and extension blocks even if they do not affect the trajectory?
 *** Specify outputs of evaluate() using string like 'pqrs'

Measure:
 *** Convert GlobalSatData to a Measure simulator.
 *** Review UCF's latest PointBasedMeasure submission.
 * Use SURF instead of SIFT.
 * Implement SURF as a feature-matching option in OpticalFlowOpenCV.
 * Should cost be provided in two parts related to Shannon information? (inconsistent bits, total bits)
 * Fix axis ordering bug in PointBasedMeasure
 * In PointBasedMeasure, cache results of finding keypoints for each image.
 * In OpticalFlowOpenCV, cache results of finding cvGoodFeaturesToTrack.

DataContainer:
 *** Develop stateless API compatible with AFRL ANTBED.
 * Find a way to distinguish between multiple sensors in a DataContainer that derive from the same class.
   * Improve scheme for matching measures to sensor data.
   * listSensors() should return a list of strings identifying sensors?
 * Split GlobalSatData into a measure and a reference trajectory simulator?
 * Add rangefinder class that could also represent bearing-only tracker output.
 * Add SICK laser scanner interface for legacy purposes.
 * Make a container that has all sensors and type checks its inputs.
 * VAMAV OpenSceneGraph simulator?
 * Packaging King Air flight?
 * Inertial sensor interface should specify its error characteristics?
 * Interfacing with Paul Metzger's simulator?

CameraArray:
 * Check fisheye projection and inverseProjection equations at image center.
 * Should masking be separate from projection?

glossary:
 * Add a page to wiki for each term
   * dynamic model
   * measure
   * cost graph
   * edge
   * node
   * optimization step
   * sensativity
   * granularity
   * monotonicity
   * forcing function
   * metric