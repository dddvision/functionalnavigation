Coding tasks:

 * Move TODO statements from the framework to here (leave components alone).
 * Separate dataContainer stuff from the trajectory optimization manager.
 * Wrap the "objective" so that optimizer never sees trajectories directly?
 * Make class aliases for "time", "index", "real" and other simple classes?
 * Replace zero-based indices with non-zero-bases indices when possible.
 * Clarify time system by introducing t0 reference?
 * Add mlint testing requirement in how to make a component wiki.
 * Implement derivative() function in wobble1.
 * Add rangefinder class that could also represent bearing-only tracker output.
 * Remove dependence on Symbolic Toolbox.

 * dataContainer
   * Coordinate with Jimmy Touma for AFRL data.
   * Avinash's GPS dataset
   * VAMAV OpenSceneGraph simulator?
   * Packaging King Air flight?
   * Interfacing with Paul Metzger's simulator?

 * dynamicModel
   * Make dynamicModelStub a discrete LTI system defined by A,B,C,D
   * Require [ta,tb] as inputs to the constructor?
   * Split up lat,lon,alt outputs or leave them together?
   * Method to extend number of model parameters to cover a later time.
   * Dynamic model takes inputs pqa, deltat, and parameters?
   * Recompute trajectory only when parameters change.

 * measure
   * Require [ta,tb] as inputs to the constructor?
   * Clarify throughout the documentation that all measures are two-point
   * Should cost be provided in two parts related to Shannon information? (inconsistent information bits, total information bits)
   * Add accuracy tolerance input to computeEdgeCost?
   * Measure should advertise the type of sensor that it needs.
   * Make getEdges list nodes in a interval restricted by upper AND lower indices.
   * Add SIFT or SURF visual measure.
   * Speed up optical flow.
   * Add an example of a GPS measure or fold into measureStub.
  
 * cameraArray
   * Add function getImageSize().
   * Should masking be sepate from projection?

Demonstrations:

 * Make tabletop hardware setup
 * Demonstrate GPS/IMU fused in loose, tight, and ultra-tight modes
 * Perform trade studies: GPS quality, IMU quality, camera FOV, camera FPS, image resolution, limited computation

Papers to review:

 * Olsen: Pose graphs
 * Cramer-Rao: cov(your estimator)>=inv(information)
 * Anil Rao & Dave Benson: Gauss Pseudospectral Method (GPM)
 * Natalia Hernandez Gardiol @ CSAIL:
 * Bar-Shalom: Multitarget Multisensor tracking
 * Adam Klivans: learning decision trees over binary inputs
 * Kalai: learning halfspaces
 * Titterton, D. H. and Weston, J. L. Strapdown Inertial Navigation Technology. IEE, page 254, 2004.